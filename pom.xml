<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.4</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.snazzybytes</groupId>
	<artifactId>reactive-rest-api</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>reactive-rest-api</name>
	<description>Reactive Rest API with Spring WebFlux</description>
	<scm>
		<connection>scm:git:${project.scm.url}</connection>
		<developerConnection>scm:git:${project.scm.url}</developerConnection>
		<!-- <url>git@github.com:snazzybytes/reactive-rest-api.git</url> -->
		<url>https://github.com/snazzybytes/reactive-rest-api.git</url>
		<tag>v0.0.1</tag>
	</scm>
	<properties>
		<java.version>17</java.version>
		<junit.jupiter.version>5.7.2</junit.jupiter.version>
		<lombok.version>1.18.24</lombok.version>
		<netty-resolver-dns-m1mac.version>4.1.82.Final</netty-resolver-dns-m1mac.version>
		<maven-enforcer.version>3.1.0</maven-enforcer.version>
		<checkstyle-maven-plugin.version>3.2.0</checkstyle-maven-plugin.version>
		<mockwebserver.version>4.10.0</mockwebserver.version>
		<maven.release.plugin.version>2.5.3</maven.release.plugin.version>
		<spotify.dockerfile.maven.version>1.4.13</spotify.dockerfile.maven.version>
		<dockerhub.username>snazzybytes</dockerhub.username>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- netty dns resolver: needed to run on M1 mac  -->
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-resolver-dns-native-macos</artifactId>
			<version>${netty-resolver-dns-m1mac.version}</version>
			<classifier>osx-aarch_64</classifier>
			<scope>runtime</scope>
		</dependency>
		<!-- provided deps-->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- optional deps -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>
		<!-- mvn test deps-->
		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>mockwebserver</artifactId>
			<version>${mockwebserver.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit.jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<version>${junit.jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
			</exclusions>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<!-- needed for Docker image optimization w/LAYERING -->
					<layers>
						<enabled>true</enabled>
					</layers>
				</configuration>
				<executions>
					<execution>
						<goals>
							<!-- spring-boot-starter-PARENT turns this ON by default-->
							<!-- but let's be EXPLICIT for clarity -->
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.40.2</version>
				<configuration>
					<verbose>true</verbose>
					<images>
						<image>
							<!-- should yield "snazzybytes/reactive-rest-api"-->
							<name>snazzybytes/${project.artifactId}</name>
							<build>
								<assembly>
									<descriptorRef>artifact</descriptorRef>
								</assembly>
								<dockerFile>${project.basedir}/Dockerfile</dockerFile>
								<tags>
									<tag>latest</tag>
									<tag>${project.version}</tag>
								</tags>
							</build>
						</image>
					</images>
				</configuration>
			</plugin>
			<!-- Skip maven-deploy-plugin (using Fabric8/Spotify/Other? instead) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.2</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>${maven.release.plugin.version}</version>
				<configuration>
					<tagNameFormat>v@{project.version}</tagNameFormat>
					<!-- skip commits generated by bot from CI (Github Actions)-->
					<scmCommentPrefix>[ci skip]</scmCommentPrefix>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${checkstyle-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>validate</id>
						<phase>validate</phase>
						<configuration>
							<configLocation>checkstyle.xml</configLocation>
							<testSourceDirectories>src/test/java</testSourceDirectories>
							<includeTestSourceDirectory>true</includeTestSourceDirectory>
						</configuration>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>${maven-enforcer.version}</version>
				<executions>
					<execution>
						<id>enforce</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<banDuplicatePomDependencyVersions />
								<requireUpperBoundDeps>
									<!-- 'uniqueVersions' (default:false) can be set to true if you want to compare the timestamped SNAPSHOTs  -->
									<!-- <uniqueVersions>true</uniqueVersions> -->
									<!-- If you wish to ignore certain cases:
									<excludes>
										<exclude>com.google.guava:guava</exclude>
									</excludes>
									-->
									<!-- If you include specific cases only these will be checked: (when omitted everything is included)
									<includes>
										<include>com.google.guava:guava</include>
									</includes>
									-->
								</requireUpperBoundDeps>
							</rules>
							<requireMavenVersion>
								<version>3.0</version>
							</requireMavenVersion>
							<requireJavaVersion>
								<version>17</version>
							</requireJavaVersion>
						</configuration>
					</execution>
				</executions>

			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>dependency-analyze</id>
						<phase>package</phase>
						<goals>
							<goal>analyze</goal>
						</goals>
						<configuration>
							<ignoreNonCompile>true</ignoreNonCompile>
							<!-- ignore annotations for "unused but declared" warnings -->
							<ignoredUnusedDeclaredDependencies>
								<ignoredUnusedDeclaredDependency>io.netty:netty-resolver-dns-native-macos</ignoredUnusedDeclaredDependency>
								<ignoredUnusedDeclaredDependency>org.springframework.boot:*</ignoredUnusedDeclaredDependency>
							</ignoredUnusedDeclaredDependencies>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>